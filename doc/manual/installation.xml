<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:id="chap-installation">

	<title>Installation</title>

	<para>
		This chapter explains how DisnixOS can be installed. Except for the basic 
		<link xlink:href="http://nixos.org/disnix">Disnix</link> 
		toolset, only the coordinator machine needs the DisnixOS
		extension tools. 
	</para>
	
	<section>
		<title>Compiling DisnixOS from source</title>

		<para>
			This section explains how to compile DisnixOS from source code.
			Usually, this is only needed in special circumstances such as for 
			development, or trying a new platform. A more convenient way to install
			DisnixOS is to use the Nix package manager.
		</para>
		
		<section>
			<title>Prerequisites</title>
			<para>
				In order to build DisnixOS from source code, the following dependencies are required:
				Since it is an extension to
				<link xlink:href="http://nixos.org/disnix">Disnix</link>,
				the core Disnix toolset must be installed. Have a look for 
				installation instructions in the Disnix manual.
				Moreover, for network communication, DisnixOS uses
				<link xlink:href="http://www.dest-unreach.org/socat">socat</link>,
				which must also be present on the system.
				For infrastructure instantiation and provisioning,
				<link xlink:href="http://github.com/nixos/nixops">NixOps</link>
				must be installed. Have a look at the NixOps manual
				for more information.
			</para>
		</section>

		<section>
			<title>Compiling DisnixOS</title>

			<para>
				After unpacking or checking out the DisnixOS sources, it can be
				compiled by executing the following commands:

<screen>
$ ./configure <replaceable>options...</replaceable>
$ make
$ make install
</screen>
			</para>

			<para>
				When building from the Subversion repository, these should be
				preceded by the command:

<screen>
$ ./bootstrap
</screen>
			</para>

			<para>
				The installation path can be specified by passing the
				<option>--prefix=<replaceable>prefix</replaceable></option> to
				<command>configure</command>. The default installation directory is
				<filename>/usr/local</filename>. You can change this to any location
				you like.  You must have write permission to the
				<replaceable>prefix</replaceable> path.
			</para>
		</section>
	</section>

	<section>
		<title>Installing DisnixOS by using the Nix package manager</title>

		<para>
			The easiest way to use DisnixOS is by installing the DisnixOS package with
			the Nix package manager from the
			<link xlink:href="http://nixos.org/nixpkgs">Nixpkgs</link>
			repository by typing:

<screen>
$ nix-env -i disnixos
</screen>

			Another way is downloading the DisnixOS source distribution
			and to compile it manually. Moreover, it is also a good thing to have
			to basic Disnix toolset in your environment. This can be done by typing:
		</para>

<screen>
$ nix-env -i disnix
</screen>

		<para>
			A copy of
			<link xlink:href="http://nixos.org/nixpkgs">Nixpkgs</link> is required
			and an environment variable <code>NIX_PATH</code> must point to the path where
			it is installed, so that Disnix is able to find it. In NixOS, a copy is 
			already present and this environment variable has already been configured.
			On other systems this variable can be configured by adding the following lines to your
			<filename>~/.bash_profile</filename> configuration (or another configuration
			file, if you use a different shell):
		</para>
		
<screen>
$ cat &gt;&gt; ~/.bash_profile &lt;&lt;EOF
# Begin Nixpkgs addition

NIX_PATH="nixpkgs=/path/to/nixpkgs"
export NIX_PATH

# End Nixpkgs addition
EOF
</screen>
	</section>
	
	<section>
		<title>Using NixOS infrastructure deployment features on a regular Linux distribution</title>
		
		<para>
			To use the NixOS deployment features and test driver on a regular Linux distribution, you need a
			copy of the NixOS source code, which can be obtained from our Git repository by typing:
			
<screen>
$ git clone https://github.com/NixOS/nixos.git
</screen>
		</para>
		
		<para>
			DisnixOS also needs to know where to find the NixOS source code, provided by the
			<code>NIX_PATH</code> environment variable. On regular Linux systems, this environment variable must
			point to the path where the NixOS source is stored.
			This variable can be configured by adding the following lines to your
			<filename>~/.bash_profile</filename> configuration (or another configuration
			file, if you use a different shell):
		</para>
		
<screen>
$ cat &gt;&gt; ~/.bash_profile &lt;&lt;EOF
# Begin NixOS addition

NIX_PATH="$NIX_PATH:nixos=/path/to/nixos"
export NIX_PATH

# End NixOS addition
EOF
</screen>
		
		<para>
			Moreover, for efficiency you need a system capable of running
			<link xlink:href="http://www.linux-kvm.org">KVM</link>, check your host Linux
			distribution for more instructions.
		</para>
	</section>
</chapter>
