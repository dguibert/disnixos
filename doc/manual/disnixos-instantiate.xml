<refentry xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xml:id="sec-disnixos-instantiate">
          
	<refmeta>
		<refentrytitle>disnixos-instantiate</refentrytitle>
		<manvolnum>1</manvolnum>
		<refmiscinfo class="source">DisnixOS</refmiscinfo>
		<refmiscinfo class="version"><xi:include href="version.txt" parse="text" /></refmiscinfo>
	</refmeta>
	
	<refnamediv>
		<refname>disnixos-instantiate</refname>
		<refpurpose>Instantiate a distributed derivation from DisnixOS expressions</refpurpose>
	</refnamediv>
	
	<refsynopsisdiv>
		<cmdsynopsis>
			<command>disnix-instantiate</command>
			<arg choice="opt"><option>-s</option> <replaceable>services_expr</replaceable></arg>
			<arg choice="plain"><option>-n</option> <replaceable>network_expr</replaceable></arg>
			<arg choice="plain"><option>-d</option> <replaceable>distribution_expr</replaceable></arg>
			<arg><replaceable>options</replaceable></arg>
		</cmdsynopsis>
	</refsynopsisdiv>
	
	<refsection>
		<title>Description</title>
		
		<para>
			The command <command>disnix-instantiate</command> generates a service distributed derivation file
			from a services expression, one or more NixOS network expressions and distribution expression, which
			can be used to build the services on the target machines from source code by using the
			<command>disnix-build</command> command.
		</para>
		<para>
			If only network expressions are given without a services or distribution expression, then an infrastructure
			distributed derivation file is generated.
		</para>
		<para>
			Most users and developers don't need to use this command directly. The command
			<link linkend="sec-disnixos-env"><command>disnixos-env</command></link>
			performs instantiation of a distributed derivation automatically. It is mostly used for debugging purposes or to perform certain
			tasks manually.
		</para>
	</refsection>
	
	<refsection>
		<title>Options</title>
		
		<variablelist>
			<varlistentry>
				<term><option>-s</option>, <option>--services</option></term>
				<listitem>
					<para>
						Services Nix expression which describes all components of the distributed system
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-n</option>, <option>--network</option></term>
				<listitem>
					<para>
						Network Nix expression which captures NixOS configurations of machines in the network.
						It is possible to pass this option multiple times, with multiple network models.
						Multiple network models are zipped together to a single configuration, which is useful to
						capture various aspects (e.g. physical and logical properties) of networks in separate models.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-d</option>, <option>--distribution</option></term>
				<listitem>
					<para>
						Distribution Nix expression which maps services to machines in the network
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--target-property</option></term>
				<listitem>
					<para>
						The target property of an infrastructure model, that specifies how to connect
						to the remote Disnix interface. (Defaults to hostname)
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--no-out-link</option></term>
				<listitem>
					<para>
						Do not create a 'result' symlink
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--show-trace</option></term>
				<listitem>
					<para>
						Shows a trace of the output.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--vm</option></term>
				<listitem>
					<para>
						Enables all configuration settings for deploying a network of efficient QEMU machines which
						includes adding the relevant QEMU settings and test instrumentation. It also sets the target
						property to the backdoor.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--use-nixops</option></term>
				<listitem>
					<para>
						Specifies that NixOps is used to take care of the infrastructure deployment, so that it
						properly interprets NixOps configurations and uses NixOps tooling instead of Disnix's deployment
						facilities.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--disable-disnix</option></term>
				<listitem>
					<para>
						To properly generate a Disnix infrastructure model, the Disnix service is automatically enabled in
						a networked NixOS configuration. This option disables Disnix, which can be useful for development
						purposes.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-h</option>, <option>--help</option></term>
				<listitem>
					<para>
						Shows the usage of this command to the user.
					</para>
				</listitem>
			</varlistentry>	
		</variablelist>
	</refsection>
	
	<refsection>
		<title>Environment variables</title>
		
		<variablelist>
			<varlistentry>
				<term><option>DISNIX_TARGET_PROPERTY</option></term>
				<listitem>
					<para>
						Sets the target property of an infrastructure model,
						that specifies how to connect to the remote Disnix interface. (Defaults to hostname)
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>DISNIXOS_USE_NIXOPS</option></term>
				<listitem>
					<para>
						When set to 1, it specifies that NixOps is used to take care of the infrastructure
						deployment, so that it properly interprets NixOps configurations and uses NixOps
						tooling instead of Disnix's deployment facilities.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsection>
</refentry>
