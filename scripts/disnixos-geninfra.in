#!/bin/bash -e
# Disnix - A distributed application layer for Nix
# Copyright (C) 2008-2010  Sander van der Burg
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

# Shows the usage of this command to the user

showUsage()
{
    echo "Usage: $0 [options] network_expr"
    echo "Options:"
    echo
    echo "--no-out-link     Do not create a 'result' symlink"
    echo "--use-backdoor    Indicates that the backdoor must be enabled so that the VMs can be accessed through a socket"
    echo "--use-vm-testing  Indicates that we generate virtual machines, so that the physical characteristics are automatically added"
    echo "--use-nixops      Use NixOps instead of Disnix's deployment facilities"
    echo "--show-trace      Shows a trace of the output"
    echo "-h,--help         Shows the usage of this command"
}

# Autoconf settings
export prefix=@prefix@

# Import Disnix checks
source @DISNIX_PREFIX@/share/disnix/checks

# Import checks
source @datadir@/@PACKAGE@/checks

# Parse valid argument options

PARAMS=`getopt -n $0 -o h -l no-out-link,use-backdoor,use-vm-testing,use-nixops,show-trace,help -- "$@"`

if [ $? != 0 ]
then
    showUsage
    exit 1
fi

eval set -- "$PARAMS"

# Evaluate valid options

while [ "$1" != "--" ]
do
    case "$1" in
	--no-out-link)
	    noOutLink=1
	    ;;
	--use-backdoor)
	    useBackdoor=1
	    ;;
	--use-vm-testing)
	    useVMTesting=1
	    ;;
	--use-nixops)
	    useNixOps=1
	    ;;
	--show-trace)
	    showTrace=1
	    ;;
	-h|--help)
	    showUsage
	    exit 0
	    ;;
    esac
    
    shift
done

shift

# Validate the given options

checkNoOutLink
checkShowTrace

if [ "$useBackdoor" = "1" ]
then
    useBackdoorArg="--arg useBackdoor true"
fi

if [ "$useVMTesting" = "1" ]
then
    useVMTesting="--arg useVMTesting true"
fi

checkUseNixOps

if [ "$useNixOps" = "1" ]
then
    nixOpsArg="--arg nixOpsModel true"
fi

if [ -z "$1" ]
then
    echo "ERROR: A network expression must be specified!" >&2
    exit 1
else
    while [ "$1" != "" ]
    do
	networkFiles="$networkFiles $(readlink -f $1)"
	shift
    done
fi

# Execute operation
nix-build @datadir@/@PACKAGE@/generate-infrastructure.nix --arg networkFiles "[ $networkFiles ]" $useBackdoorArg $useVMTesting $nixOpsArg $showTraceArg $noOutLinkArg
