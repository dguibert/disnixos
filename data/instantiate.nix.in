{ networkFiles
, targetProperty
, nixpkgs ? <nixpkgs>
, nixos ? <nixos>
, enableDisnix ? true
, nixOpsModel ? false
, disnix ? builtins.storePath @DISNIX_PREFIX@
}:

let
  pkgs = import nixpkgs {};

  lib = import ./lib.nix { inherit nixpkgs nixos pkgs; };
  
  mergedNetwork = lib.generateMergedNetwork networkFiles nixOpsModel;
  distributedDerivation = lib.generateDistributedDerivation mergedNetwork targetProperty enableDisnix nixOpsModel false false;
  
  generateDistributedDerivationXSL = "${disnix}/share/disnix/generatedistributedderivation.xsl";
in
pkgs.stdenv.mkDerivation {
  name = "distributedDerivation.xml";
  buildInputs = [ pkgs.libxslt ];
  buildCommand = ''
    (
    cat <<EOF
    ${builtins.toXML distributedDerivation}
    EOF
    ) | xsltproc ${generateDistributedDerivationXSL} - > $out
  '';
}
