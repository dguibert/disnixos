{ networkFiles
, targetProperty
, nixpkgs ? <nixpkgs>
, nixos ? <nixos>
, enableDisnix ? true
, nixOpsModel ? false
, useVMTesting ? false
, useBackdoor ? false
}:

let
  pkgs = import nixpkgs {};

  lib = import ./lib.nix { inherit nixpkgs nixos pkgs; };
  
  mergedNetwork = lib.generateMergedNetwork networkFiles nixOpsModel;
  manifest = lib.generateManifest mergedNetwork targetProperty enableDisnix nixOpsModel useVMTesting useBackdoor;
  
  generateManifestXSL = @DISNIX_PREFIX@/share/disnix/generatemanifest.xsl;
in
pkgs.stdenv.mkDerivation {
  name = "manifest.xml";
  buildInputs = [ pkgs.libxslt ];
  buildCommand = ''
    (
    cat <<EOF
    ${builtins.toXML manifest}
    EOF
    ) | xsltproc ${generateManifestXSL} - > $out
  '';
}
