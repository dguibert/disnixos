let
  networkFile = @networkFile@;
  nixpkgs = "@nixpkgs@";
  nixos = "@nixos@";
  useBackdoor = @useBackdoor@;
  useTcpSocket = @useTcpSocket@;

  pkgs = import nixpkgs {};
  network = import networkFile;

  configurations = pkgs.lib.mapAttrs (targetName: configuration: 
    (import "${nixos}/lib/eval-config.nix" {
      inherit nixpkgs;
      
      modules = [
        configuration
      ]
      ++ [ 
        { key = "publish-infrastructure";
	  services.disnix.publishInfrastructure.enable = true;
	  services.disnix.publishInfrastructure.enableAuthentication = true;
	  networking.hostName = targetName;
	}
      ]
      ++ pkgs.lib.optional useBackdoor {
        key = "backdoor";
	services.disnix.infrastructure.backdoor = if useTcpSocket then "TCP:${targetName}:512" else "UNIX-CONNECT:${targetName}.socket";
      };
      extraArgs = configurations;
    }).config) network;
in
pkgs.lib.mapAttrs (targetName: config: config.services.disnix.infrastructure) configurations
